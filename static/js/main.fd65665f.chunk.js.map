{"version":3,"sources":["contexts/CountryContext.js","contexts/SearchContext.js","contexts/FilterContext.js","components/Header.js","components/Search.js","components/Filter.js","components/Nav.js","components/Footer.js","components/Pagination.js","components/CountryLight.js","helpers.js","pages/Global.js","components/Country.js","pages/Details.js","theme.js","global-style.js","App.js","serviceWorker.js","index.js"],"names":["CountryContext","React","createContext","CountryContextProvider","state","countries","json","localStorage","getItem","this","setState","JSON","parse","fetch","then","response","data","setItem","stringify","catch","console","log","Provider","value","props","children","Component","SearchContext","SearchContextProvider","search","setSearch","FilterContext","FilterContextProvider","filter","setFilter","Header","theme","toggleTheme","icon","label","className","to","src","alt","onClick","Search","useContext","useState","setValue","useEffect","Form","onSubmit","event","preventDefault","country","name","toLowerCase","includes","InputGroup","Prepend","Button","variant","type","FormControl","aria-describedby","placeholder","onChange","target","Filter","filters","setLabel","length","handleFilter","filterValue","innerText","some","arr","len","i","j","population","temp","reverse","sortByPopulation","region","dropItems","map","index","Dropdown","Item","key","Toggle","id","Menu","Divider","Nav","history","useHistory","DetailsNav","push","role","aria-label","GlobalNav","content","useLocation","pathname","Footer","href","Pagination","currentPage","itemsPerPage","onPageChanged","pages","pagesCount","Math","ceil","Prev","page","active","Next","getData","items","start","Array","isArray","slice","CountryLight","Card","Img","flag","Body","Title","Text","capital","replace","formatNumber","num","Intl","NumberFormat","format","Global","setContent","setCurrentPage","CountryList","Country","currencies","currency","symbol","languages","language","borders","border","nativeName","subregion","topLevelDomain","join","Details","useParams","find","el","borderCode","countryCode","alpha3Code","lightTheme","body","component","text","toggleBorder","gradient","darkTheme","GlobalStyles","createGlobalStyle","App","setTheme","path","addHandlerKey","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.fd65665f.chunk.js","sourcesContent":["import React from 'react';\n\nexport const CountryContext = React.createContext();\n\nexport default class CountryContextProvider extends React.Component {\n  state = {\n    countries: []\n  }\n\n  componentDidMount() {\n    const json = localStorage.getItem('json')\n    if (json) {\n      this.setState({ countries: JSON.parse(json) })\n    } else {\n      fetch('https://restcountries.eu/rest/v2/all')\n      .then(response => response.json())\n      .then((data) => {\n        this.setState({ countries: data });\n        localStorage.setItem('json', JSON.stringify(data))\n      }).catch(console.log)\n    }\n  }\n\n  render() {\n    return (\n      <CountryContext.Provider value={this.state.countries}>\n        {this.props.children}\n      </CountryContext.Provider>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport const SearchContext = React.createContext();\n\n// return Searched country\nexport default class SearchContextProvider extends Component {\n  state = {\n    search: []\n  }\n\n  setSearch = (countries) => {\n    this.setState({search: countries});\n  }\n\n  render () {\n    const {search}    = this.state;\n    const {setSearch} = this;\n\n    return (\n      <SearchContext.Provider value={{search, setSearch}}>\n        {this.props.children}\n      </SearchContext.Provider>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport const FilterContext = React.createContext();\n\n// return filtered countries\n// (by continent or population number)\nexport default class FilterContextProvider extends Component {\n  state = {\n    filter: []\n  }\n\n  setFilter = (countries) => {\n    this.setState({filter: countries});\n  }\n\n  render () {\n    const {filter}    = this.state;\n    const {setFilter} = this;\n\n    return (\n      <FilterContext.Provider value={{filter, setFilter}}>\n        {this.props.children}\n      </FilterContext.Provider>\n    );\n  }\n}\n","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nconst Header = ({ theme, toggleTheme }) => {\n  const icon  = (theme === \"light\") ? \"moon\" : \"sun\";\n  const label = (theme === \"light\") ? \"dark\" : \"light\";\n\n  return (\n    <header className=\"d-flex flex-column flex-md-row justify-content-between align-items-center p-3 px-md-5 py-md-4\">\n      <Link\n        className=\"d-flex\"\n        to=\"/\">\n        <img src=\"world.svg\" alt=\"\"/>\n        <h1 className=\"fz-28 my-0 pt-1 px-2\">Where in the World ?</h1>\n      </Link>\n      <button\n        className=\"btn d-flex justify-content-between border-0 shadow-none theme-toggle\"\n        onClick={toggleTheme}>\n        <img src={icon + \".svg\"} alt=\"theme\"/>\n        <b>{label} theme</b>\n      </button>\n    </header>\n  );\n}\n\nexport default Header;\n","import React, { useState, useContext, useEffect } from 'react';\nimport { CountryContext }                         from '../contexts/CountryContext';\nimport { FilterContext }                          from '../contexts/FilterContext';\nimport { SearchContext }                          from '../contexts/SearchContext';\nimport { Form, FormControl, InputGroup, Button }  from 'react-bootstrap';\n\nconst Search = (props) => {\n  const countries         = useContext(CountryContext);\n  const {filter}          = useContext(FilterContext);\n  const {setSearch}       = useContext(SearchContext);\n  const [value, setValue] = useState('');\n\n  // reset input value if filter isset\n  useEffect(() => {\n    setValue('');\n  }, [filter])\n\n  const handleChange = (event) => {\n    setValue(event.target.value);\n  };\n\n  // return searched country to SearchContext\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const search = countries.filter((country) =>\n      // country.name.toLowerCase() === value.toLowerCase());\n      country.name.toLowerCase().includes(value.toLowerCase()));\n    if (typeof search !== \"undefined\") {\n      setSearch(search); }\n    else {\n      setSearch(countries); }\n  };\n\n  return (\n      <Form\n        className=\"row col-xl-4 col-md-6\"\n        onSubmit={handleSubmit}>\n          <InputGroup className=\"mb-3\">\n            <InputGroup.Prepend className=\"col-2\">\n              <Button\n                className=\"shadow-none\"\n                variant=\"none\"\n                type=\"submit\">\n                <img src=\"search-dark.svg\" alt=\"submit\"/>\n              </Button>\n            </InputGroup.Prepend>\n            <FormControl\n              className=\"col-10 pl-3 border-0\"\n              aria-describedby=\"basic-addon1\"\n              type=\"search\"\n              placeholder=\"Search for a country...\"\n              value={value}\n              onChange={handleChange}\n            />\n          </InputGroup>\n      </Form>\n  );\n}\n\nexport default Search;\n","import React, { useState, useContext, useEffect } from 'react';\nimport { CountryContext } from '../contexts/CountryContext';\nimport { SearchContext }  from '../contexts/SearchContext';\nimport { FilterContext }  from '../contexts/FilterContext';\nimport Dropdown           from 'react-bootstrap/Dropdown';\n\nconst Filter = () => {\n  const countries           = useContext(CountryContext);\n  const {setFilter}         = useContext(FilterContext);\n  const {search, setSearch} = useContext(SearchContext);\n  const filters             = ['Population', 'Africa', 'Americas', 'Asia', 'Europe', 'Oceania'];\n  const defaultLabel        = 'Filter By';\n  const [label, setLabel]   = useState(defaultLabel);\n\n  // reset label if search isset\n  useEffect(() => {\n    if (search.length > 0) {\n      setLabel(defaultLabel); }\n  } ,[search]);\n\n  // bubble sort population number\n  // return descending array\n  function sortByPopulation() {\n    let arr = [...countries];\n    var len = arr.length;\n\n    for (var i = 0; i < len ; i++) {\n      for(var j = 0 ; j < len - i - 1; j++){\n        if (arr[j].population > arr[j + 1].population) {\n          var temp = arr[j];\n          arr[j] = arr[j+1];\n          arr[j + 1] = temp; }}}\n\n    return arr.reverse();\n  }\n\n  // return filtered countries to FilterContext\n  const handleFilter = (event) => {\n    event.preventDefault();\n    const filterValue = event.target.innerText;\n    const validFilter = filters.some((filter) => filter === filterValue)\n\n    if (!validFilter) {\n      setLabel(defaultLabel);\n      setFilter(countries); }\n    else {\n      setSearch([]); // clear main view if search isset\n      setLabel(filterValue);\n      if (filterValue === \"Population\") {\n        setFilter(sortByPopulation()); }\n      else {\n        setFilter(countries.filter((country) => country.region === filterValue)); }}\n  };\n\n  // dropdown regions items\n  const dropItems = filters.map((filter, index) => {\n    if(filter != \"Population\") {\n      return (\n        <Dropdown.Item key={index} onClick={handleFilter}>{filter}</Dropdown.Item>\n      )\n    }\n  });\n\n  return (\n    <Dropdown className=\"col-xl-2 col-md-4\">\n      <Dropdown.Toggle className=\"w-75\" variant=\"none\" id=\"dropdown-basic\">\n        {label}\n      </Dropdown.Toggle>\n\n      <Dropdown.Menu>\n        <Dropdown.Item onClick={handleFilter}>Population</Dropdown.Item>\n        <Dropdown.Divider />\n        <Dropdown.Header>Region</Dropdown.Header>\n        {dropItems}\n        <Dropdown.Divider />\n        <Dropdown.Item onClick={handleFilter}>❌ No Filter</Dropdown.Item>\n      </Dropdown.Menu>\n    </Dropdown>\n  );\n}\n\nexport default Filter;\n","import React, {useContext}         from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport {SearchContext}             from '../contexts/SearchContext';\nimport Search                      from './Search';\nimport Filter                      from './Filter';\nimport Button                      from 'react-bootstrap/Button';\n\nconst Nav = () => {\n  const history = useHistory();\n  const {setSearch} = useContext(SearchContext);\n\n  const handleClick = () => {\n    history.push('/');\n  }\n\n  const DetailsNav =\n    <Button\n    className=\"back-button\"\n    onClick={handleClick}\n    variant=\"none\">\n      <span\n      role=\"img\"\n      className=\"mr-1\"\n      aria-label=\"back-button\">\n        ⬅️\n      </span>\n      Back\n    </Button>;\n\n  const GlobalNav  =\n      <>\n        <Search />\n        <Filter />\n      </>\n    ;\n\n  const location = useLocation();\n  const content  = (location.pathname === \"/\") ? GlobalNav : DetailsNav;\n\n  return (\n    <nav className=\"row justify-content-between align-items-center m-md-5 mx-5 my-4\">\n      {content}\n    </nav>\n  );\n}\n\nexport default Nav;\n","import React from 'react';\n\nconst Footer = () => {\n  return (\n    <footer className=\"text-center w-100\">\n      <p>API provided by <a className=\"credits\" href=\"https://restcountries.eu/\">restcountries.eu</a></p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\nimport {default as ReactBootstrapPagination} from 'react-bootstrap/Pagination';\n\nconst Pagination = ({ currentPage, itemsPerPage, length, onPageChanged }) => {\n  const pages = [];\n  const pagesCount = Math.ceil(length / itemsPerPage);\n  for (let i = 1; i <= pagesCount; i++) { pages.push(i); }\n\n  return (\n    <ReactBootstrapPagination className=\"pagination justify-content-center pt-5\">\n      <ReactBootstrapPagination.Prev\n        className={((currentPage === 1) ? \" disabled\" : \"\")}\n        onClick={() => onPageChanged(currentPage - 1)}\n      />\n      {\n        pages.map(page =>\n          <ReactBootstrapPagination.Item\n            key={page}\n            active={currentPage === page}\n            onClick={() => onPageChanged(page)}>\n            {page}\n          </ReactBootstrapPagination.Item>\n        )\n      }\n      <ReactBootstrapPagination.Next\n        className={((currentPage === pagesCount) ? \" disabled\" : \"\")}\n        onClick={() => onPageChanged(currentPage + 1)}\n      />\n    </ReactBootstrapPagination>\n  );\n}\n\nPagination.getData = (items, currentPage, itemsPerPage) => {\n  const start = currentPage * itemsPerPage - itemsPerPage;\n  // if 1 object only\n  if (!Array.isArray(items)) { return [items]; }\n  // else\n  return items.slice(start, start + itemsPerPage);\n}\n\nexport default Pagination;\n","import React  from 'react';\nimport {Link} from 'react-router-dom';\nimport Card   from 'react-bootstrap/Card';\n\nconst CountryLight = (props) => {\n  return (\n    <Card className=\"d-inline-flex m-4\">\n      <div className=\"card-img-wrapper\">\n        <Card.Img variant=\"top\" src={props.flag} />\n      </div>\n      <Card.Body className=\"p-4\">\n        <Card.Title>{props.name}</Card.Title>\n        <Card.Text className=\"list-unstyled\">\n            <li><b>Capital:</b> {props.capital}</li>\n            <li><b>Region:</b> {props.region}</li>\n            <li><b>Population:</b> {props.population}</li>\n        </Card.Text>\n        <Link className=\"text-dark stretched-link\" to={\"/\" + props.name.replace(/ /g, \"_\")} />\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport default CountryLight;\n","//more readable number\n//e.g: 10000000 -> 10 000 000\nexport const formatNumber = num => {\n  var nf = Intl.NumberFormat();\n  return nf.format(num);\n}\n","import React, { useState, useContext, useEffect } from 'react';\nimport { CountryContext } from '../contexts/CountryContext';\nimport { SearchContext }  from '../contexts/SearchContext';\nimport { FilterContext }  from '../contexts/FilterContext';\nimport Pagination         from '../components/Pagination';\nimport CountryLight       from '../components/CountryLight';\nimport {formatNumber}     from '../helpers';\n\nconst Global = () => {\n  const countries             = useContext(CountryContext);\n  const {search, setSearch}   = useContext(SearchContext);\n  const {filter, setFilter}   = useContext(FilterContext);\n  const [content, setContent] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  useEffect(() => {\n    setSearch([]);\n    setFilter([]);\n  }, []);\n\n  useEffect(() => {\n    // content =\n    // isset search ?\n    if (search.length > 0) { setContent(search); }\n    // or isset filter ?\n    else if (filter.length > 0) { setContent(filter); }\n    // default countries list\n    else { setContent(countries); }\n  }, [search, filter, countries])\n\n  const handleChangePage = (page) => {\n    setCurrentPage(page);\n  };\n\n  const itemsPerPage = 25;\n  const paginatedContent = Pagination.getData(\n    content,\n    currentPage,\n    itemsPerPage\n  );\n\n  const CountryList = paginatedContent.map((country, index) => {\n    return (\n      <CountryLight\n        key={index}\n        flag={country.flag}\n        name={country.name}\n        capital={country.capital}\n        region={country.region}\n        population={formatNumber(country.population)}\n      />)\n  });\n\n  return (\n    <>\n      {CountryList}\n      <Pagination\n        currentPage={currentPage}\n        itemsPerPage={itemsPerPage}\n        length={content.length}\n        onPageChanged={handleChangePage}\n      />\n    </>\n  );\n}\n\nexport default Global;\n","import React  from 'react';\nimport {Link} from 'react-router-dom';\n\nconst Country = (props) => {\n  const currencies = props.currencies.map((currency, index) => {\n    return (\n      <span key={index}>\n        {(props.currencies.length > 1) ? <br/> : '' }\n        {currency.name} ({currency.symbol})\n      </span> )\n  });\n\n  const languages = props.languages.map((language) => language.name);\n\n  const borders = props.borders.map((border, index) => {\n    return (\n      <Link\n        key={index}\n        className=\"borders-countries border mx-1 mb-1 px-2\"\n        to={\"/\" + border.replace(/ /g, \"_\")}>\n        {border}\n      </Link> )\n  });\n\n  return (\n    <article id=\"details\" className=\"container\">\n      <div className=\"row justify-content-center\">\n        <img className=\"col-lg-4 col-md-offset-4\" src={props.flag} alt=\"\" />\n        <div className=\"row col-lg-8\">\n          <div className=\"col p-2 m-2\">\n            <h2>{props.name}</h2>\n            <ul className=\"list-unstyled\">\n              <li><b>Native Name: </b>{props.nativeName}</li>\n              <li><b>Capital: </b>{props.capital}</li>\n              <li><b>Region: </b>{props.region}</li>\n              <li><b>Sub Region: </b>{props.subregion}</li>\n              <li><b>Population: </b>{props.population}</li>\n            </ul>\n          </div>\n          <div className=\"align-items-end align-items-md-center col d-flex m-2 p-2\">\n            <ul className=\"list-unstyled\">\n              <li><b>TLD:</b> {props.topLevelDomain}</li>\n              <li>\n                <b>Currencies: </b>\n                {currencies}\n              </li>\n              <li>\n                <b>Languages: </b>\n                {languages.join(', ')}\n              </li>\n            </ul>\n          </div>\n          <div className=\"row col-12 px-5\">\n            {(borders.length > 0) ? <b>Border Countries: </b> : ''}\n            {borders}\n          </div>\n        </div>\n      </div>\n    </article>\n  );\n}\n\nexport default Country;\n","import React, { useContext } from 'react';\nimport { useParams }         from 'react-router-dom';\nimport { CountryContext }    from '../contexts/CountryContext';\nimport { formatNumber }      from '../helpers';\nimport Country               from '../components/Country';\n\nconst Details = () => {\n  const countries = useContext(CountryContext);\n  // url/country\n  let {country} = useParams();\n  // country object\n  country = countries.find((el) => el.name === country.replace(/_/g, \" \"));\n  // human readable borders\n  let borders = country.borders.map(borderCode =>\n    countries.find(countryCode => borderCode === countryCode.alpha3Code)\n  );\n  borders = borders.map(el => el.name);\n\n  return (\n    <Country\n      flag={country.flag}\n      name={country.name}\n      nativeName={country.nativeName}\n      capital={country.capital}\n      region={country.region}\n      subregion={country.subregion}\n      population={formatNumber(country.population)}\n      topLevelDomain={country.topLevelDomain}\n      currencies={country.currencies}\n      languages={country.languages}\n      borders={borders}\n    />\n  );\n}\n\nexport default Details;\n","export const lightTheme = {\n  body: '#FAFAFA',\n  component: '#FFF',\n  text: '#363537',\n  toggleBorder: '#FFF',\n  gradient: 'linear-gradient(#39598A, #79D7ED)',\n}\n\nexport const darkTheme = {\n  body: '#212E37',\n  component: '#2B3743',\n  text: '#FAFAFA !important',\n  toggleBorder: '#6B8096',\n  gradient: 'linear-gradient(#091236, #1E215D)',\n}\n","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyles = createGlobalStyle`\n  body {\n    background: ${({ theme }) => theme.body};\n    color: ${({ theme }) => theme.text};\n    font-family: BlinkMacSystemFont, -apple-system, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif;\n    transition: all 0.04s ease-out;\n  }\n\n  ::placeholder,\n  select,\n  .dropdown button,\n  .dropdown-menu,\n  .dropdown-item,\n  form *,\n  form button,\n  .back-button {\n    color: ${({ theme }) => theme.text};\n  }\n\n  header,\n  form *,\n  .card-body,\n  .card-img-wrapper,\n  .badge,\n  .dropdown button,\n  .dropdown-menu,\n  .back-button {\n    background: ${({ theme }) => theme.component};\n  }\n`\n","import React, {useState}                from 'react';\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\n// contexts\nimport CountryContextProvider           from './contexts/CountryContext';\nimport SearchContextProvider            from './contexts/SearchContext';\nimport FilterContextProvider            from './contexts/FilterContext';\n// components\nimport Header                           from './components/Header';\nimport Nav                              from './components/Nav';\nimport Footer                           from './components/Footer';\nimport Global                           from './pages/Global';\nimport Details                          from './pages/Details';\n// toggle dark/light theme\nimport { ThemeProvider }                from 'styled-components';\nimport { lightTheme, darkTheme }        from './theme';\nimport { GlobalStyles }                 from './global-style';\n//css\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  const [theme, setTheme] = useState('light');\n  const toggleTheme = () => { (theme === 'light') ? setTheme('dark') : setTheme('light'); }\n\n  return (\n    <>\n    <ThemeProvider theme={theme === 'light' ? lightTheme : darkTheme}>\n    <GlobalStyles />\n\n    <HashRouter>\n      <Header theme={theme} toggleTheme={toggleTheme} />\n        <CountryContextProvider>\n        <FilterContextProvider>\n        <SearchContextProvider>\n          <main className=\"p-md-5 mx-md-5 text-center\">\n            <Nav />\n            <Switch>\n              <Route path=\"/:country\" component={Details} addHandlerKey={true} />\n              <Route path=\"/\" component={Global} addHandlerKey={true} />\n            </Switch>\n          </main>\n        </SearchContextProvider>\n        </FilterContextProvider>\n        </CountryContextProvider>\n      <Footer/>\n    </HashRouter>\n\n    </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React    from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App                    from './App';\nimport * as serviceWorker     from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}